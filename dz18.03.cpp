// dz18.03.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <cstdlib>
#include <ctime>
#include <algorithm>

int main()
{
    setlocale(LC_ALL, "ru");
    //Дан двумерный массив с размерами 10 на 10,
   // заполненный случайными числами от 0 до 100.
  
    const int r = 10;
    const int c = 10;
    int mx[r][c];
    srand(time(NULL));
    for (int i = 0; i < r; i++) {
        for (int j = 0; j < c; j++) {
            mx[i][j] = rand() % (100 - 0) + 1;

            std::cout << mx[i][j] << '\t';

        }
        std::cout << "\n"<< "\n";
    }

   //Напишите программу, которая считает сумму
       //каждого отдельного ряда и выводит все найденные
           //суммы в консоль.


    const int rows = 3;
    const int cols = 3;

    int arr[rows][cols]{

        {1,2,3},
        {4,5,6},
        {7,8,9},
    };
    std::cout << "Массив:\n";
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            std::cout << arr[i][j] << "\t";

        }
        std::cout << '\n';
    }

    int sum = 0;
    for (int i = 0; i < rows; i++)
        for (int j = 0; j < cols; j++)
        sum += arr[i][j];
    std::cout << "Сумма " << sum << '\n';


}
 

  // Пользователь вводит число N от 0 до 9. Программа
  //  сортирует соответствующий ряд массива и выводит его.
  // Пример: N = 4, значит программа сортирует 4 ряд
  //двумерного массива и выводит результат сортировки.

 int n;
    const int r = 10; 

    const int c = 3;
     
    int mass[r][c];

    for (int i = 0; i < r; i++) {
        for (int j = 0; j < c; j++) {
            mass[i][j] = rand() % (9 - 0) + 1;
            std::cout << mass[i][j] << "\t";

        }
        std::cout << '\n';
    }
    std::cout << "Введите номер ряда для сортировки -> ";
    std::cin >> n;

   



    return 0;

}
 
// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
